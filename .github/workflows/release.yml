name: Release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: npm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag matches package.json version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          TAG_VERSION=${{ github.ref_name }}
          TAG_VERSION=${TAG_VERSION#v}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm install --no-audit

      - name: Run tests
        run: ./scripts/ci.sh
        shell: bash

      - name: Upload code coverage
        uses: codecov/codecov-action@v4
        with:
          files: coverage/lcov.info
          name: release-${{ github.ref_name }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish to npm with provenance
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            --draft \
            --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
