/* @flow */

const test = require('../../index.js.flow');

test('Named test', t => {
	t.pass('Success');
	// $ExpectError: Unknown method "unknownAssertion"
	t.unknownAssertion('Whoops');
	const context = t.context;
	// $ExpectError: Unknown method "end"
	t.end();
});

test(t => {
	t.pass('Success');
	// $ExpectError: Unknown method "unknownAssertion"
	t.unknownAssertion('Whoops');
	const context = t.context;
	// $ExpectError: Unknown method "end"
	t.end();
});

test.cb(t => {
	t.pass('Success');
	t.end();
});

test.beforeEach(t => {
	const context = t.context;
})

function macro(t, input, expected) {
	t.is(eval(input), expected);
}
macro.title = (title, input, expected) => title || input;

function macro2(t, input, expected) {
	t.is(eval(input), expected);
}

test('2 + 2 === 4', macro, '2 + 2', 4);
test(macro, '2 * 3', 6);

test('2 + 2 === 4', [macro, macro2], '2 + 2', 4);
test([macro, macro2], '2 * 3', 6);

function macroBadTitle(t, input, expected) {
	t.is(eval(input), expected);
}
macroBadTitle.title = 'Not a function';
// $ExpectError: Macro "title" is not a function
test('2 + 2 === 4', macroBadTitle, '2 + 2', 4);
